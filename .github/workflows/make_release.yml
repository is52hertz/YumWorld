name: CI

on: 
  workflow_dispatch:
    inputs:
      version:
        description: version
        required: true
        type: string
jobs:
  build_windows:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: packages
        run: |
          sudo apt-get update
          sudo apt-get install git g++ make imagemagick xclip libsdl1.2-dev libglu1-mesa-dev libgl1-mesa-dev g++-mingw-w64-i686-win32 libfreetype-dev
      - name: scripts
        run: |
          cd ../
          cp OneLife/scripts/skps2010Scripts/skps2010Build.sh .
          ./skps2010Build.sh pull_only
          ./makeWindows.sh ${{ inputs.version }}
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ inputs.version }}
          release_name: v${{ inputs.version }}
          body: |
            Update to v${{ inputs.version }}.

            This is for One Hour One Life v${{ inputs.version }}.
            How to install: https://github.com/skps2010/OneLife/#how-to-use
            
            升級到 v${{ inputs.version }}。
            
            這對應到 One Hour One Life v${{ inputs.version }}
            如何安裝：
            https://github.com/skps2010/OneLife/#如何使用正體
            https://github.com/skps2010/OneLife/#如何使用简体
      - name: upload windows #WINDOWS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ../OneLife_Windows_v${{ inputs.version }}.zip
          asset_name: OneLife_Windows_v${{ inputs.version }}.zip
          asset_content_type: application/zip
  build_windows_zh_cn:
    strategy:
      matrix:
        os: [windows-latest]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: scripts
        shell: cmd
        run: |
          set PYTHONIOENCODING=utf8
          set version=${{ inputs.version }}
          echo https://github.com/skps2010/OneLife/releases/download/v%version%/OneLife_Windows_v%version%.zip

          curl --silent -L -o OneLife_Windows_v%version%.zip https://github.com/skps2010/OneLife/releases/download/v%version%/OneLife_Windows_v%version%.zip
          echo after curl
          tar -xf OneLife_Windows_v%version%.zip
          echo after tar
          pip3 install requests
          (echo 2 && echo 1) | python3 -X utf8 OneLife_v%version%\translator.py
          echo after translate
          
          curl --silent -o make_zh_cn.iss https://raw.githubusercontent.com/skps2010/OneLife/master/build/win32/make_zh_cn.iss
          curl --silent -o icon_installer.ico https://raw.githubusercontent.com/skps2010/OneLife/master/build/win32/icon_installer.ico
          
          curl --silent -L -o is.exe https://jrsoftware.org/download.php/is.exe
          echo after download
          is.exe /verysilent /currentuser /dir=./
          curl --silent -o ChineseSimplified.isl https://raw.githubusercontent.com/kira-96/Inno-Setup-Chinese-Simplified-Translation/main/ChineseSimplified.isl
          dir
          copy ChineseSimplified.isl "Inno Setup 6\Languages"
          echo after install

          echo #define MyAppVersion "%version%" > work.iss
          type make_zh_cn.iss >> work.iss
          \"Inno Setup 6\ISCC.exe" work.iss
      - name: test dir
        run: |
          ls
      - name: upload windows #WINDOWS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: OHOL_Simplified_Chinese_v${{ inputs.version }}.zip
          asset_name: OHOL_Simplified_Chinese_v${{ inputs.version }}.zip
          asset_content_type: application/zip
