name: Build&Update

on: 
  workflow_dispatch:
    inputs:
      release_name:
        description: Release Name
        required: true
        type: string
      release_body:
        description: Release Body
        required: true
        type: string

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
      fail-fast: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: packages
        run: |
          sudo apt-get update
          sudo apt-get install git g++ make imagemagick xclip libsdl1.2-dev libglu1-mesa-dev libgl1-mesa-dev mingw-w64
          sudo apt-get install build-essential
          sudo apt-get install build-essential libgl1-mesa-dev
          sudo apt-get install libglew-dev libsdl2-dev libsdl2-image-dev libglm-dev libfreetype6-dev
          sudo apt-get install libglfw3-dev libglfw3
          sudo apt install libharfbuzz-dev
      - name: freetype
        run: |
          cd WorkflowsBuild/freetype-2.13.2
          ls
          cd builds/unix
          ls
          chmod +x configure
          ./configure
          cd ../..
          ls
          make
          sudo make install
      - name: scripts
        run: |
          cd WorkflowsBuild
          chmod +x BuildYumWorldL.sh
          ./BuildYumWorldL.sh
          chmod +x BuildYumWorldW.sh
          ./BuildYumWorldW.sh ${{ inputs.release_name }}
      - name: test dir
        run: |
          cd WorkflowsBuild
          ls
          echo "_________________"
          cd YumWorldWindows
          ls
          cd ..
          echo "_________________"
          cd YumWorldLinux
          ls
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.release_name }}
          release_name: ${{ inputs.release_name }}
          body: |
            ${{ inputs.release_body }}
      - name: upload linux #LINUX
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WorkflowsBuild/YumWorld.zip
          asset_name: YumWorld.zip
          asset_content_type: application/zip
      - name: upload windows #WINDOWS
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: WorkflowsBuild/YumWorld_Windows.zip
          asset_name: YumWorld_Windows.zip
          asset_content_type: application/zip
